name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: '1.0.0'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run tests
        run: go test -v ./...

      - name: Build binary
        run: |
          go build -o snapshot-cosmos .
          ./snapshot-cosmos version

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build binaries
        run: |
          # Build for multiple platforms
          GOOS=linux GOARCH=amd64 go build -o snapshot-cosmos-linux-amd64 .
          GOOS=linux GOARCH=arm64 go build -o snapshot-cosmos-linux-arm64 .
          GOOS=darwin GOARCH=amd64 go build -o snapshot-cosmos-darwin-amd64 .
          GOOS=darwin GOARCH=arm64 go build -o snapshot-cosmos-darwin-arm64 .

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            snapshot-cosmos-linux-amd64
            snapshot-cosmos-linux-arm64
            snapshot-cosmos-darwin-amd64
            snapshot-cosmos-darwin-arm64
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  helm-release:
    needs: [build, release]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Package Helm chart
        run: |
          helm package helm/
          mv snapshot-cosmos-*.tgz helm/

      - name: Update Helm repository
        run: |
          # Create index if doesn't exist
          if [ ! -f helm/index.yaml ]; then
            helm repo index helm/
          else
            helm repo index helm/ --merge helm/index.yaml
          fi

      - name: Commit and push Helm chart
        run: |
          git add helm/
          git commit -m "Update Helm chart to ${{ github.ref_name }}" || exit 0
          git push 